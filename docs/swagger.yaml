basePath: /api/v1
definitions:
  contacts.createPayload:
    properties:
      addresses:
        items:
          $ref: '#/definitions/contacts.createPayloadAddress'
        type: array
      birthday:
        example: "1990-10-12"
        type: string
        nullable: true
      first_name:
        example: Kamaal
        minLength: 1
        type: string
      last_name:
        example: Appledoe
        minLength: 1
        type: string
        nullable: true
      nickname:
        example: K
        minLength: 1
        type: string
        nullable: true
      phones:
        items:
          $ref: '#/definitions/contacts.createPayloadPhone'
        minItems: 1
        type: array
    required:
    - first_name
    - phones
    type: object
  contacts.createPayloadAddress:
    properties:
      city:
        type: string
      country:
        type: string
      postalCode:
        type: string
      street:
        type: string
      types:
        items:
          type: string
        type: array
    type: object
  contacts.createPayloadPhone:
    properties:
      number:
        example: "+31611111111"
        minLength: 5
        type: string
      types:
        example:
        - VOICE
        items:
          type: string
        type: array
    required:
    - number
    type: object
  contacts.createResponse:
    type: object
  health.pingResponse:
    properties:
      message:
        type: string
    type: object
  users.signUpPayload:
    type: object
  users.signUpResponse:
    type: object
info:
  contact: {}
  description: API for DAVS
  license:
    name: MIT
    url: https://github.com/kamaal111/davs/blob/main/LICENSE
  title: DAVS API
  version: "1.0"
paths:
  /contacts:
    post:
      consumes:
      - application/json
      description: To create a contact
      operationId: createContact
      parameters:
      - description: Contact information used to create a contact
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/contacts.createPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/contacts.createResponse'
      summary: Create a contact
      tags:
      - contacts
  /health/ping:
    get:
      consumes:
      - application/json
      description: To pings the server
      operationId: healthPing
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/health.pingResponse'
      summary: Checks if server is up or down
      tags:
      - health
  /users:
    post:
      consumes:
      - application/json
      description: To create a user
      operationId: signUpUser
      parameters:
      - description: Sign up payload to create a user
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/users.signUpPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.signUpResponse'
      summary: Sign up user
      tags:
      - users
swagger: "2.0"
